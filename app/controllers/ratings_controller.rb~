class RatingsController < ApplicationController

  def cache_does_not_contain_data_or_it_is_too_old
  	fragment_exist?('ratings')
  end
  
  # Index cachetaan 10 minuutin vÃ¤lein
  def index
	@ratings = Rating.all
	Rails.cache.write("beer top 3", Beer.top(3)) if cache_does_not_contain_data_or_it_is_too_old
    @beers = Rails.cache.read "beer top 3"
	Rails.cache.write("recent", Rating.recent) if cache_does_not_contain_data_or_it_is_too_old
    @recent = Rails.cache.read "recent"
	Rails.cache.write("style top 3", Style.top(3)) if cache_does_not_contain_data_or_it_is_too_old
    @styles = Rails.cache.read "style top 3"
	Rails.cache.write("brewery top 3", Brewery.top(3)) if cache_does_not_contain_data_or_it_is_too_old
    @breweries = Rails.cache.read "brewery top 3"
	Rails.cache.write("user top 4", User.top(4)) if cache_does_not_contain_data_or_it_is_too_old
    @users = Rails.cache.read "user top 4"
  end

  def new
    @rating = Rating.new
    @beers = Beer.all
  end

  def create
    @rating = Rating.new params.require(:rating).permit(:score, :beer_id)

    if @rating.save
      current_user.ratings << @rating
      redirect_to user_path current_user
    else
      @beers = Beer.all
      render :new
    end
  end

  def destroy
    rating = Rating.find(params[:id])
    rating.delete if current_user == rating.user
    redirect_to :back
  end
end

	#@ratings = Rating.all
    #@recent = Rating.recent
    #@beers = Beer.top(3)
    #@styles = Style.top(3)
    #@breweries = Brewery.top(3)
    #@users = User.top(4)
